version: '2.1'
# This is applicationâ€™s services configuration for development purposes only.

services:
  db:
    image: mysql:5.7
    command: '--character-set-server=utf8 --collation-server=utf8_polish_ci --max_allowed_packet=1024M'
    ports:
      - "3306"
    environment:
      MYSQL_ROOT_PASSWORD: "password"
      MYSQL_DATABASE: feder
    volumes:
      - mysql-data:/var/lib/mysql

  gulp:
    build:
      context: .
      dockerfile: .contrib/docker/Dockerfile.gulp
    ports:
      - "35729:35729"
    volumes:
      - .:/app

  web:
    build: &webBuild
      context: .
      dockerfile: .contrib/docker/Dockerfile.web
      #args:
        #PYTHON_VERSION: '${PYTHON_VERSION:-3.6.9}' # Match to production environment
        # PYTHON_VERSION: '${PYTHON_VERSION:-3.10.6}' # Match to staging environment
        #DJANGO_VERSION: '${DJANGO_VERSION:-==3.1.5}'
    volumes: &webVolumes
      - .:/code
    environment: &webEnvironment
      DATABASE_URL: mysql://root:password@db/feder_staging_copy
      ELASTICSEARCH_URL: http://elasticsearch:9200/
      APACHE_TIKA_URL: 'http://tika:9998/'
      MEDIA_ROOT_ENV: 'media_staging'
      VIRUSTOTAL_API_KEY:
      ATTACHMENTSCANNER_API_KEY:
      ATTACHMENTSCANNER_API_URL:
      METADEFENDER_API_KEY:
    ports:
      - "8000:8000"
    # Following allows to execute `docker attach feder_web_1`
    # necessary when using ipdb in development:
    stdin_open: true
    tty: true

  worker:
    command: python manage.py process_tasks
    build: *webBuild
    volumes: *webVolumes
    environment: *webEnvironment

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.6.2
    environment:
      discovery.type: single-node
      cluster.routing.allocation.disk.threshold_enabled: 'false'
    ports:
      - "9200:9200"

  tika:
    image: quay.io/watchdogpolska/apache-tika

volumes:
  mysql-data:
